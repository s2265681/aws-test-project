import { OperationNode } from 'kysely/dist/cjs/operation-node/operation-node.js';
import { OrderByItemNode } from 'kysely/dist/cjs/operation-node/order-by-item-node.js';
import { OrderByNode } from 'kysely/dist/cjs/operation-node/order-by-node.js';
import { PartitionByItemNode } from 'kysely/dist/cjs/operation-node/partition-by-item-node.js';
import { PartitionByNode } from 'kysely/dist/cjs/operation-node/partition-by-node.js';
export interface OverNode extends OperationNode {
    readonly kind: 'OverNode';
    readonly orderBy?: OrderByNode;
    readonly partitionBy?: PartitionByNode;
}
/**
 * @internal
 */
export declare const OverNode: Readonly<{
    is(node: OperationNode): node is OverNode;
    create(): OverNode;
    cloneWithOrderByItems(overNode: OverNode, items: ReadonlyArray<OrderByItemNode>): OverNode;
    cloneWithPartitionByItems(overNode: OverNode, items: ReadonlyArray<PartitionByItemNode>): OverNode;
}>;
