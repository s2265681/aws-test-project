import { ColumnUpdateNode } from 'kysely/dist/cjs/operation-node/column-update-node.js';
import { JoinNode } from 'kysely/dist/cjs/operation-node/join-node.js';
import { OperationNode } from 'kysely/dist/cjs/operation-node/operation-node.js';
import { ReturningNode } from 'kysely/dist/cjs/operation-node/returning-node.js';
import { WhereNode } from 'kysely/dist/cjs/operation-node/where-node.js';
import { WithNode } from 'kysely/dist/cjs/operation-node/with-node.js';
import { FromNode } from 'kysely/dist/cjs/operation-node/from-node.js';
import { ExplainNode } from 'kysely/dist/cjs/operation-node/explain-node.js';
import { LimitNode } from 'kysely/dist/cjs/operation-node/limit-node.js';
import { TopNode } from 'kysely/dist/cjs/operation-node/top-node.js';
import { OutputNode } from 'kysely/dist/cjs/operation-node/output-node.js';
import { OrderByNode } from 'kysely/dist/cjs/operation-node/order-by-node.js';
export interface UpdateQueryNode extends OperationNode {
    readonly kind: 'UpdateQueryNode';
    readonly table?: OperationNode;
    readonly from?: FromNode;
    readonly joins?: ReadonlyArray<JoinNode>;
    readonly where?: WhereNode;
    readonly updates?: ReadonlyArray<ColumnUpdateNode>;
    readonly returning?: ReturningNode;
    readonly with?: WithNode;
    readonly explain?: ExplainNode;
    readonly endModifiers?: ReadonlyArray<OperationNode>;
    readonly limit?: LimitNode;
    readonly top?: TopNode;
    readonly output?: OutputNode;
    readonly orderBy?: OrderByNode;
}
/**
 * @internal
 */
export declare const UpdateQueryNode: Readonly<{
    is(node: OperationNode): node is UpdateQueryNode;
    create(tables: ReadonlyArray<OperationNode>, withNode?: WithNode): UpdateQueryNode;
    createWithoutTable(): UpdateQueryNode;
    cloneWithFromItems(updateQuery: UpdateQueryNode, fromItems: ReadonlyArray<OperationNode>): UpdateQueryNode;
    cloneWithUpdates(updateQuery: UpdateQueryNode, updates: ReadonlyArray<ColumnUpdateNode>): UpdateQueryNode;
    cloneWithLimit(updateQuery: UpdateQueryNode, limit: LimitNode): UpdateQueryNode;
}>;
