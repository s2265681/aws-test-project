import { AlterTableNode } from 'kysely/dist/cjs/operation-node/alter-table-node.js';
import { CreateIndexNode } from 'kysely/dist/cjs/operation-node/create-index-node.js';
import { CreateSchemaNode } from 'kysely/dist/cjs/operation-node/create-schema-node.js';
import { CreateTableNode } from 'kysely/dist/cjs/operation-node/create-table-node.js';
import { CreateTypeNode } from 'kysely/dist/cjs/operation-node/create-type-node.js';
import { CreateViewNode } from 'kysely/dist/cjs/operation-node/create-view-node.js';
import { DropIndexNode } from 'kysely/dist/cjs/operation-node/drop-index-node.js';
import { DropSchemaNode } from 'kysely/dist/cjs/operation-node/drop-schema-node.js';
import { DropTableNode } from 'kysely/dist/cjs/operation-node/drop-table-node.js';
import { DropTypeNode } from 'kysely/dist/cjs/operation-node/drop-type-node.js';
import { DropViewNode } from 'kysely/dist/cjs/operation-node/drop-view-node.js';
import { MergeQueryNode } from 'kysely/dist/cjs/operation-node/merge-query-node.js';
import { QueryNode } from 'kysely/dist/cjs/operation-node/query-node.js';
import { RawNode } from 'kysely/dist/cjs/operation-node/raw-node.js';
import { RefreshMaterializedViewNode } from 'kysely/dist/cjs/operation-node/refresh-materialized-view-node.js';
import { QueryId } from 'kysely/dist/cjs/util/query-id.js';
import { CompiledQuery } from 'kysely/dist/cjs/query-compiler/compiled-query.js';
export type RootOperationNode = QueryNode | CreateTableNode | CreateIndexNode | CreateSchemaNode | CreateViewNode | RefreshMaterializedViewNode | DropTableNode | DropIndexNode | DropSchemaNode | DropViewNode | AlterTableNode | RawNode | CreateTypeNode | DropTypeNode | MergeQueryNode;
/**
 * a `QueryCompiler` compiles a query expressed as a tree of `OperationNodes` into SQL.
 */
export interface QueryCompiler {
    compileQuery(node: RootOperationNode, queryId: QueryId): CompiledQuery;
}
